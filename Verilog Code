module fifo(
input rd_en, wr_en,
input wclk, rclk,rst,
  input [7:0]wdata,
  output reg [7:0]rdata
  output empty,full

);
  
  
  
  integer i=0;
  reg [7:0]mem[0:15];
  reg [4:0]wr_ptr;
  reg [4:0]rd_ptr;
  reg [4:0]wr_ptr_gr;
  reg [4:0]rd_ptr_gr;
  
 

  always@(posedge wclk or posedge rst )begin
    if(rst)begin
      for(i=0;i<16;i++)begin
        mem[i]<=0;
      end
      rdata<=0;
    end
  end
  
 
   
  
 
 ////////write function
  always@(posedge wclk or posedge rst) begin
      if(rst==1)begin
       wr_ptr <= 0;
      wr_ptr_gr<=0;
    
      end
    else
        begin
     if(wr_en && !full)begin
      mem[wr_ptr[3:0]]<=wdata;
      wr_ptr<= wr_ptr_next;
       wr_ptr_gr<=wr_ptr_gr_next;
    end
    end
  
  end
  ////////read function
  always@(posedge rclk or posedge rst) begin
    if(rst==1)begin
       rd_ptr <= 0;
      rd_ptr_gr<=0;
    
    end
      
    else  begin
      if(rd_en && !empty)begin
      rdata<=mem[rd_ptr[3:0]];
      rd_ptr <= rd_ptr_next ;
      rd_ptr_gr<=rd_ptr_gr_next;
    
    end
    end
  
  end
  
   wire [4:0] wr_ptr_next    = wr_ptr + 1;
  wire [4:0] wr_ptr_gr_next = (wr_ptr_next >> 1) ^ wr_ptr_next;
  
    // --- Read logic ---
  wire [4:0] rd_ptr_next    = rd_ptr + 1;
  wire [4:0] rd_ptr_gr_next = (rd_ptr_next >> 1) ^ rd_ptr_next;

  //////2 flop read_ptr syncchronizer
  
    reg [4:0]rd_ptr_gr_sync1;
  reg [4:0]rd_ptr_gr_sync2;
  
  always@(posedge wclk or posedge rst)begin
    if(rst)begin
    rd_ptr_gr_sync1<=0;
      rd_ptr_gr_sync2<=0;
    end
    else begin
      rd_ptr_gr_sync1 <= rd_ptr_gr;
      rd_ptr_gr_sync2 <= rd_ptr_gr_sync1;
    
    end
  end
  
  ///////2 flop wr_ptr synchronizer
  
  reg [4:0]wr_ptr_gr_sync1;
  reg [4:0]wr_ptr_gr_sync2;
  
  always@(posedge rclk or posedge rst)begin
    if(rst)begin
      wr_ptr_gr_sync1<=0;
      wr_ptr_gr_sync2<=0;
    end
    else begin
       wr_ptr_gr_sync1<=wr_ptr_gr;
       wr_ptr_gr_sync2<= wr_ptr_gr_sync1;
    
    end
  
  end
  
  assign empty=(rd_ptr_gr==wr_ptr_gr_sync2);
  assign full= (wr_ptr_gr=={~rd_ptr_gr_sync2[4:3],rd_ptr_gr_sync2[2:0]});
  
  
  
  
 
  endmodule
